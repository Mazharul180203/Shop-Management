generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  password        String
  role            String
  createdAt       DateTime @default(now()) @db.DateTime
  updatedAt       DateTime @default(now()) @updatedAt @db.DateTime
}

model category {
  id              Int      @id @default(autoincrement())
  category_name   String
  items           items[]
  createdAt       DateTime @default(now()) @db.DateTime
  updatedAt       DateTime @default(now()) @updatedAt @db.DateTime
}

model units {
  id              Int      @id @default(autoincrement())
  units_name      String
  units_label     String
  relation        Float
  items           items[]
  createdAt       DateTime @default(now()) @db.DateTime
  updatedAt       DateTime @default(now()) @updatedAt @db.DateTime
}
model brands {
  id              Int      @id @default(autoincrement())
  brands_name     String
  items           items[]
  createdAt       DateTime @default(now()) @db.DateTime
  updatedAt       DateTime @default(now()) @updatedAt @db.DateTime
}

model items {
  id              Int      @id @default(autoincrement())
  items_name      String
  purchaseitems   purchaseitems[]
  Purchase        purchase[]
  sales           sales[]
  items_category  category @relation(fields: [categoryId],references: [id])
  categoryId      Int
  description     String
  items_brands    brands   @relation(fields: [brandsId],references: [id])
  brandsId        Int
  items_units     units    @relation(fields: [unitsId],references: [id])
  unitsId         Int
  createdAt       DateTime @default(now()) @db.DateTime
  updatedAt       DateTime @default(now()) @updatedAt @db.DateTime
}

model supplier {
  id                        Int      @id @default(autoincrement())
  supplier_name             String
  contact_person            String
  purchaseitems             purchaseitems[]
  Purchase                  purchase[]
  purchasesuppliertrack     purchasesuppliertrack[]
  transaction               transaction[]
  supplierledger            supplierledger[]
  mobile_number             String
  address                   String
  createdAt                 DateTime @default(now()) @db.DateTime
  updatedAt                 DateTime @default(now()) @updatedAt @db.DateTime
}


model purchaseitems {
  id                    Int        @id @default(autoincrement())
  purchaseitems_items   items      @relation(fields: [itemId],references: [id])
  itemId                Int
  purchaseitemsId       supplier   @relation(fields: [supplierId],references: [id])
  supplierId            Int
  purchase_qty          Float
  price_per_unit        Float
  price_avg             Float
  purchase_total        Float
  subtotal_amount       Float
  purchase_update_qty   Float
  tax_Id                Int
  createdAt             DateTime   @default(now()) @db.DateTime
  updatedAt             DateTime   @default(now()) @updatedAt @db.DateTime
}

model purchase {
  id                  Int       @id @default(autoincrement())
  purchase_items      items     @relation(fields: [itemId], references: [id])
  itemId              Int
  supplier            supplier  @relation(fields: [supplierId], references: [id])
  supplierId          Int
  purchase_qty        Float
  price_per_unit      Float
  purchase_total      Float
  subtotal_amount     Float
  tax_Id              Int
  createdAt           DateTime  @default(now()) @db.DateTime
  updatedAt           DateTime  @default(now()) @updatedAt @db.DateTime
}

model sales {
  id                  Int        @id @default(autoincrement())
  items               items      @relation(fields: [itemId], references: [id])
  itemId              Int
  total_qty           Float
  sales_qty           Float
  sales_price         Float
  dis_per             Float
  dis                 Float
  total               Int
  createdAt           DateTime  @default(now()) @db.DateTime
  updatedAt           DateTime  @default(now()) @updatedAt @db.DateTime
}

model customertype {
  id                    Int      @id @default(autoincrement())
  type_name             String
  customer              customer[]
  customerpayment       customerpayment[]
  createdAt             DateTime @default(now()) @db.DateTime
  updatedAt             DateTime @default(now()) @updatedAt @db.DateTime
}


model customer {
  id                    Int      @id @default(autoincrement())
  customer_name         String
  customerId            customertype @relation(fields: [customertypeId], references: [id])
  customertypeId        Int
  salescustomertracker  salescustomertracker[]
  customerledger        customerledger[]
  customerpayment       customerpayment[]
  createdAt             DateTime @default(now()) @db.DateTime
  updatedAt             DateTime @default(now()) @updatedAt @db.DateTime
}

model salescustomertracker {
  id                    Int         @id @default(autoincrement())
  customer              customer    @relation(fields: [customerId],references: [id])
  customerId            Int
  curr_balance          Float
  payment_type          String
  createdAt             DateTime @default(now()) @db.DateTime
  updatedAt             DateTime @default(now()) @updatedAt @db.DateTime
}

model customerpayment {
  id                    Int            @id @default(autoincrement())
  customertype          customertype   @relation(fields: [customertypeId], references: [id])
  customertypeId        Int
  customer              customer       @relation(fields: [customerId],references: [id])
  customerId            Int
  balance               Float
  transaction_type      String
  collection_method     String
  paid                  Float
  remission             Float
  curr_balance          Float
  createdAt             DateTime @default(now()) @db.DateTime
  updatedAt             DateTime @default(now()) @updatedAt @db.DateTime
}

model customerledger {
  id                    Int       @id @default(autoincrement())
  customer              customer  @relation(fields: [customerId], references: [id])
  customerId            Int
  payment_type          String
  credit                Float
  debit                 Float
  balance               Float
  createdAt             DateTime @default(now()) @db.DateTime
  updatedAt             DateTime @default(now()) @updatedAt @db.DateTime
}


model purchasesuppliertrack {
  id                    Int      @id @default(autoincrement())
  supplier              supplier @relation(fields: [supplierId], references: [id])
  supplierId            Int
  curr_balance          Float
  payment_type          String
  createdAt             DateTime @default(now()) @db.DateTime
  updatedAt             DateTime @default(now()) @updatedAt @db.DateTime
}

model transaction {
  id                    Int      @id @default(autoincrement())
  supplier              supplier @relation(fields: [supplierId], references: [id])
  supplierId            Int
  balance               Float
  transaction_type      String
  transaction_method    String
  payment               Float
  curr_balance          Float
  createdAt             DateTime @default(now()) @db.DateTime
  updatedAt             DateTime @default(now()) @updatedAt @db.DateTime
}

model supplierledger {
  id                    Int      @id @default(autoincrement())
  supplier              supplier @relation(fields: [supplierId], references: [id])
  supplierId            Int
  payment_type          String
  credit                Float
  debit                 Float
  balance               Float
  createdAt             DateTime @default(now()) @db.DateTime
  updatedAt             DateTime @default(now()) @updatedAt @db.DateTime
}



